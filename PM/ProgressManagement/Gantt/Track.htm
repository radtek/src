<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title>进度计划查看</title>
    <link type="text/css" rel="Stylesheet" href="../../ProgressManage/Gantt/Css/Gantt.css" />
</head>
<body>
    <div id="divDate">
        <table>
            <tr>
                <td>
                    顶层时间刻度：
                </td>
                <td>
                    <select style="margin-right: 5px;" onchange="changeTopTimeScale(this.value)">
                        <option value="year">年</option>
                        <option value="halfyear">半年</option>
                        <option value="quarter">季度</option>
                        <option value="month">月</option>
                        <option value="week" selected="selected">周</option>
                        <option value="day">日</option>
                        <option value="hour">时</option>
                    </select>
                </td>
                <td>
                    底层时间刻度：
                </td>
                <td>
                    <select onchange="changeBottomTimeScale(this.value)" style="margin-right: 5px;">
                        <option value="year">年</option>
                        <option value="halfyear">半年</option>
                        <option value="quarter">季度</option>
                        <option value="month">月</option>
                        <option value="week">周</option>
                        <option value="day" selected="selected">日</option>
                        <option value="hour">时</option>
                    </select>
                   
                </td>
                <td>
                 <input type="checkbox" id="trackcheck" onclick="oncheckedchanged(this)" /><label
                        for="trackcheck">跟踪甘特图</label>
                </td>
            </tr>
            <tr>
                <td>
                    开始日期：
                </td>
                <td >
                    <input id="twin_start" class="mini-datepicker" style="margin: 0px 0px;" />
                    </td>
                    <td>完成日期：</td>
                    <td >
                    <input id="twin_finish" class="mini-datepicker" style="margin: 0px 0px;" />
                </td>
                <td>
                    <input type="checkbox" id="chkMilestone" /><label for="chkMilestone">里程碑</label>
                </td>
            </tr>
        </table>
    </div>
    <div id="buttons" class="divFooter">
        <input class="inputBtns" type="button" value="放大" onclick="zoomIn()" />
        <input class="inputBtns" type="button" value="缩小" onclick="zoomOut()" />
        <input class="inputBtns" id="btnFilter" type="button" value="查询" onclick="filterTask()" />
        <input class="inputLBtns" type="button" id="btnCancle" value="取消查询" onclick="cancelFilter()"   />
    </div>
    <div style="text-align: center;">
        <div id="viewCt" style="margin: 0 auto;">
        </div>
    </div>
</body>
</html>

<script src="../../Script/jquery.js" type="text/javascript"></script>

<script src="../../Gantt/scripts/boot.js" type="text/javascript"></script>

<script type="text/javascript">
    var project = new PlusProject();
    project.setMultiSelect(true);                   //允许多选
    var height = $(this).height() - $('#buttons').height() - $('#divDate').height() - 10;
    project.setStyle("width:100%;height:" + height + "px;");
    project.setColumns([
    new PlusProject.IDColumn({ header: "标示", width: "50px" }), //序号
    new PlusProject.StatusColumn(), //状态信息[可以显示备注和里程碑]
    new PlusProject.NameColumn(), //任务名称
    new PlusProject.PredecessorLinkColumn(), //前置任务
    new PlusProject.DurationColumn(), //工期
    new PlusProject.StartColumn(), //开始时间
    new PlusProject.FinishColumn(), //结束时间
    new PlusProject.PercentCompleteColumn(), //完成百分比
    new PlusProject.WorkColumn(), //工时
    new PlusProject.OutlineLevelColumn()//任务层次
]);
    project.render(document.getElementById("viewCt"));

    //只读
    project.setReadOnly(true);

    var params = mini.getParams();  //...?id=100        获取URL的项目id信息
    var projectUID = params.id;
    params = { projectuid: projectUID };

    if (projectUID == null) {   //如果没有传递项目id，则加载JSON格式项目数据演示和操作
        LoadJSONProject("data/project.txt", project);
        alert("无项目参数");
    }
    else {
        LoadProject(params, project);
    }

    function upgradeTask() {
        var task = project.getSelected();
        if (task) {
            project.upgradeTask(task);
        } else {
            alert("请选中任务");
        }
    }

    function downgradeTask() {
        var task = project.getSelected();
        if (task) {
            project.downgradeTask(task);
        } else {
            alert("请选中任务");
        }
    }

    function changeTopTimeScale(value) {
        project.setTopTimeScale(value)
    }

    function changeBottomTimeScale(value) {
        project.setBottomTimeScale(value)
    }

    function zoomIn() {
        project.zoomIn();
    }

    function zoomOut() {
        project.zoomOut();
    }


    //筛选
    function filterTask() {
        var start = mini.get('twin_start').getValue();
        var finish = mini.get('twin_finish').getValue();
        var chkValue = $('#chkMilestone').attr('checked');
        var checked = chkValue == 'checked' ? true : false;
        if (start == null && finish == null && !checked) {
            project.clearFilter();
        }
        else {
            project.filter(function (task) {
                var isEigible = false;
                try {
                    if (checked) {
                        if (start != null && finish == null && task.Start.getTime() >= start.getTime() && task.Milestone == '1') {
                            isEigible = true;
                        }
                        else if (start != null && finish != null && task.Start.getTime() >= start.getTime() && task.Finish.getTime() <= new Date(finish.getYear(), finish.getMonth(), finish.getDate() + 1).getTime() && task.Milestone == '1') {
                            isEigible = true;
                        }
                        else if (start == null && finish != null && task.Finish.getTime() <= (new Date(finish.setMilliseconds(86399999))).getTime() && task.Milestone == '1') {
                            isEigible = true;
                        }
                        else if (start == null && finish == null && task.Milestone == '1') {
                            isEigible = true;
                        }
                        else
                            isEigible = false;
                    }
                    else {
                        if (start != null && finish == null && task.Start.getTime() >= start.getTime()) {
                            isEigible = true;
                        }
                        else if (start != null && finish != null && task.Start.getTime() >= start.getTime() && task.Finish.getTime() <= new Date(finish.getYear(), finish.getMonth(), finish.getDate() + 1).getTime()) {
                            isEigible = true;
                        }
                        else if (start == null && finish != null && task.Finish.getTime() <= (new Date(finish.setMilliseconds(86399999))).getTime()) {
                            isEigible = true;
                        }
                        else {
                            isEigible = false;
                        }
                    }
                } catch (err) {
                    isEigible = false;
                }
                return isEigible;
            });
        }
    }

    //跟踪甘特图
    function oncheckedchanged(ck) {
        var checked = ck.checked;
        if (checked) {
            createBaseline();
        }
        project.setViewModel(checked ? "track" : "gantt");
    }
    function createBaseline() {

        var tasklist = project.getTaskList();
        for (var i = 0, l = tasklist.length; i < l; i++) {
            var task = tasklist[i];
            if (!task.Start || !task.Finish) continue;
            var baselineActual = {
                Start: new Date(task.ActualStart == null ? null : task.ActualStart.getTime()),
                Finish: new Date(task.ActualFinish == null ? null : task.ActualFinish.getTime())
            };
            task.Baseline = [];
            task.Baseline.push(baselineActual);
        }
        project.refresh();
    }

    function filterMilestone() {
        project.filter(function(task) {
            var isEigible = false;
            try {
                if (task.Milestone == '1')
                    isEigible = true;
            } catch (err) {
                isEigible = false;
            }
            return isEigible;
        });
    }

    function cancelFilter() {
        mini.get('twin_start').setValue(null);
        mini.get('twin_finish').setValue(null);
        $('#chkMilestone').removeAttr('checked');
        project.clearFilter();
    }
</script>

