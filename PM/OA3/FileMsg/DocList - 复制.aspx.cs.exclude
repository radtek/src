using cn.justwin.BLL;
using System.Data;
using System.Web;
using System.Web.SessionState;
using System.Web.UI.WebControls;
using System;
using cn.justwin.Web;

public partial class OA3_FileMsg_DocList : NBasePage, IRequiresSessionState
{
    protected override void OnInit(System.EventArgs e)
    {
        base.OnInit(e);
    }
    protected void Page_Load(object sender, System.EventArgs e)
    {
        if (!base.IsPostBack)
        {
            this.BindTree();
            this.DataBinds();
        }
    }
    /// <summary>
    /// 设置文档列表按钮的显隐
    /// </summary>
    /// <param name="a"></param>
    private void SetbBtnIfShow(string a)
    {
        if (a == "0")//文档初版 审批
        {
            this.WF1.BusiCode = "173";
            this.btnAdd.Visible = true;
            this.btnCopy.Visible = true;
            this.btnChange.Visible = false;
            this.btnUp.Visible = false;
            this.btnEdit.Visible = true;
            this.btnSC.Visible = true;
            this.WF1.Visible = true;
        }
        else if (a == "1")//文档升版 审批
        {
            this.WF1.BusiCode = "174";
            this.btnAdd.Visible = false;
            this.btnCopy.Visible = false;
            this.btnChange.Visible = false;
            this.btnUp.Visible = true;
            this.btnEdit.Visible = false;
            this.btnSC.Visible = false;
            this.WF1.Visible = true;
        }
        else if (a == "2")//文档变更 无审批
        {
            this.WF1.BusiCode = "173";
            this.btnAdd.Visible = false;
            this.btnCopy.Visible = false;
            this.btnChange.Visible = true;
            this.btnUp.Visible = false;
            this.btnEdit.Visible = false;
            this.btnSC.Visible = false;
            this.WF1.Visible = false;
        }
        else //文档查看
        {

            this.WF1.BusiCode = "173";
            this.btnAdd.Visible = false;
            this.btnCopy.Visible = false;
            this.btnChange.Visible = false;
            this.btnUp.Visible = false;
            this.btnEdit.Visible = false;
            this.btnSC.Visible = false;
            this.WF1.Visible = false;
        }
    }

    public void BindTree()
    {
        System.Collections.Generic.List<FileModel> listArray = FileService.GetListArray(" where ParentId = Id and FileType!=0  and IsValid=0  order by CreateTime desc");
        foreach (FileModel current in listArray)
        {
            TreeNode treeNode = new TreeNode();
            treeNode.Value = current.Id;
            treeNode.Text = current.FileName;
            if (base.Request.QueryString["PId"] != null && base.Request.QueryString["PId"] == current.Id)
            {
                treeNode.Select();
            }
            treeNode.ImageUrl = "/images/tree/FileInfo/folder.gif";
            this.AddNode(treeNode);
            this.tvFile.Nodes.Add(treeNode);
        }
        if (this.tvFile.Nodes.Count > 0 && this.tvFile.SelectedValue == "")
        {
            this.tvFile.Nodes[0].Select();
            this.tvFile.Nodes[0].ImageUrl = "/images/tree/FileInfo/folder.gif";
        }
        this.hdSeleValue.Value = this.tvFile.SelectedValue;
    }
    protected void DataBinds()
    {
        string strUsersW = FileService.GetWriteByMenuID(this.tvFile.SelectedValue);//获取该目录的有写入的权限用户
        if (!string.IsNullOrEmpty(strUsersW) && strUsersW.Contains(this.UserCode))
        {
            if (!string.IsNullOrEmpty(base.Request["DocAttribute"]))
            {
                this.SetbBtnIfShow(base.Request["DocAttribute"].ToString());
            }
            else
            {
                this.SetbBtnIfShow("");
            }

            int currentPageIndex = this.AspNetPager1.CurrentPageIndex;
            string str = ((pagesize * (currentPageIndex - 1)) + 1).ToString();
            string str2 = (pagesize * currentPageIndex).ToString();
            DataTable dtA = FileService.GetFileInfo(strWhere());
            DataRow[] rows = dtA.Select(" pageindex >=" + str + " and  pageindex<=" + str2);
            DataTable dtB = dtA.Clone();
            foreach (DataRow row in rows)
            {
                dtB.Rows.Add(row.ItemArray);
            }
            this.AspNetPager1.PageSize = NBasePage.pagesize;
            this.AspNetPager1.RecordCount = dtA.Rows.Count;
            this.gvFile.DataSource = dtB;
            this.gvFile.DataBind();
            if (dtA.Rows.Count == 0)
            {
                this.lblMsgAleave.Text = "<div style='margin-left:20px; margin-top:20px; '>该目录中没有文档信息。</div>";
            }
            else
            {
                this.lblMsgAleave.Text = "";
            }
            return;
        }
        else
        {
            this.SetbBtnIfShow("");
            this.gvFile.DataBind();
            this.btnQuery.Enabled = false;
            this.lblMsgAleave.Text = "<div style='color:Red; margin-left:20px; margin-top:20px; '>您没有该目录的读写权限，请与系统管理员联系。</div>";
        }
    }

    private string strWhere()
    {
        string strWhere = " ";// and ...
        System.DateTime? startTime = DateTimeHelper.GetDateTime(this.txtStartTime.Text);
        System.DateTime? endTime = DateTimeHelper.GetDateTime(this.txtEndTime.Text);
        if (startTime.HasValue)
        {
            strWhere += " and DocEditDate >='" + startTime.Value + "'";
        }
        if (endTime.HasValue)
        {
            strWhere += " and DocEditDate <'" + endTime.Value.AddDays(1.0) + "'";
        }

        if (!string.IsNullOrEmpty(DocCode.Text))
        {
            strWhere += " and DocCode like '%" + DocCode.Text.ToString().Trim() + "%'";
        }
        if (!string.IsNullOrEmpty(FileName.Text))
        {
            strWhere += " and FileName like '%" + FileName.Text.ToString().Trim() + "%'";
        }
        if (DocTypeID.SelectedValue != "")
        {
            strWhere += " and DocTypeID ='" + DocTypeID.SelectedValue + "'";
        }
        if (DocStatusID.SelectedValue != "")
        {
            strWhere += " and DocStatusID ='" + DocStatusID.SelectedValue + "'";
        }
        if (DocVersionID.SelectedValue != "")
        {
            strWhere += " and DocVersionID ='" + DocVersionID.SelectedValue + "'";
        }
        if (tvFile.SelectedValue != "")
        {
            strWhere += " and ParentId ='" + this.tvFile.SelectedValue + "'";
        }
        strWhere += " and OA_File.IsValid=0 and FileType=0 ";
        return strWhere;
    }

    protected void AddChildNodes(TreeNode node, DataTable dtSource)
    {
        string b = "/images/tree/FileInfo/folderAdd2.png";
        string b2 = "/images/tree/FileInfo/folderSubtract2.png";
        foreach (TreeNode treeNode in node.ChildNodes)
        {
            DataRow dataRow = dtSource.NewRow();
            if (treeNode.ImageUrl != b && treeNode.ImageUrl != b2)
            {
                dataRow["FileName"] = treeNode.Text;
                dataRow["Id"] = treeNode.Value;
                dtSource.Rows.Add(dataRow);
            }
            if (treeNode.ChildNodes.Count > 0)
            {
                this.AddChildNodes(treeNode, dtSource);
            }
        }
    }

    public TreeNode AddNode(TreeNode node)
    {
        System.Collections.Generic.List<FileModel> listArray = FileService.GetListArray(" where ParentId='" + node.Value + "' and id != parentId and FileType!=0  and IsValid=0  order by CreateTime desc");
        foreach (FileModel current in listArray)
        {
            TreeNode treeNode = new TreeNode();
            treeNode.ImageUrl = imageUrl(current, base.UserCode);
            treeNode.Value = current.Id;
            treeNode.Text = current.FileName;
            node.ChildNodes.Add(treeNode);
            if (base.Request["id"] == current.Id)
            {
                treeNode.Select();
                this.ExpandSelectNode(treeNode);
            }
            this.AddNode(treeNode);
        }
        return node;
    }
    protected void ExpandSelectNode(TreeNode node)
    {
        if (node != null)
        {
            TreeNode parent = node.Parent;
            if (node.Depth == 1 || parent == null)
            {
                node.ExpandAll();
                return;
            }
            if (parent.Depth == 1)
            {
                parent.ExpandAll();
                return;
            }
            this.ExpandSelectNode(parent);
        }
    }
    public static string imageUrl(FileModel var, string usercode)
    {
        string strUsersW = FileService.GetWriteByMenuID(var.Id);//获取该目录的有写入的权限用户
                                                                //string strUsersR = FileService.GetReadByMenuID(var.Id);//获取该目录的有写入的权限用户

        string result;
        if (!string.IsNullOrEmpty(strUsersW))
        {
            if (!strUsersW.Contains(usercode))
            {
                result = "/images/tree/FileInfo/folderSubtract2.png";
                if (FileService.GetListArray(" where parentId='" + var.Id + "' AND IsValid=0 ").Count > 0)
                {
                    result = "/images/tree/FileInfo/folderAdd2.png";
                }
            }
            else
            {
                result = "/images/tree/FileInfo/folderSubtract.png";
                if (FileService.GetListArray(" where parentId='" + var.Id + "'  AND IsValid=0 ").Count > 0)
                {
                    result = "/images/tree/FileInfo/folderAdd.png";
                }
            }
        }
        else
        {
            result = "/images/tree/FileInfo/folderSubtract2.png";
            if (FileService.GetListArray(" where parentId='" + var.Id + "' AND IsValid=0 ").Count > 0)
            {
                result = "/images/tree/FileInfo/folderAdd2.png";
            }
        }
        return result;
    }
    protected void tvFile_SelectedNodeChanged(object sender, System.EventArgs e)
    {
        //try
        //{
        //    this.ddlScope.SelectedValue = this.tvFile.SelectedValue;
        //}
        //catch
        //{
        //}
        //base.RegisterScript("location='DocList.aspx?PId=" + this.tvFile.SelectedValue + "'");

        this.ViewState["search"] = "0";
        this.AspNetPager1.CurrentPageIndex = 1;
        this.DataBinds();
        this.hdSeleValue.Value = this.tvFile.SelectedValue;
    }
    protected void gvFile_RowDataBound(object sender, GridViewRowEventArgs e)
    {
        if (e.Row.RowIndex > -1)
        {
            if (e.Row.RowType == DataControlRowType.DataRow)
            {
                string value = this.gvFile.DataKeys[e.Row.RowIndex].Value.ToString();
                e.Row.Attributes["guid"] = (e.Row.Attributes["id"] = value);
            }
        }
    }
    protected void AspNetPager1_PageChanged(object sender, System.EventArgs e)
    {
        this.DataBinds();
    }
    protected void btnQuery_Click(object sender, EventArgs e)
    {
        DataBinds();
    }
    protected void btnSC_Click(object sender, EventArgs e)
    {

    }

    #region 参考,代码
    //protected void btnDel_Click(object sender, System.EventArgs e)
    //{
    // string value = this.hfldPurchaseChecked.Value;
    //System.Collections.Generic.List<string> listFromJson = JsonHelper.GetListFromJson(value);
    //string text = "已成功删除！";
    //try
    //{
    //    foreach (string current in listFromJson)
    //    {
    //        FileService.MoveRecycle(current);
    //    }
    //}
    //catch
    //{
    //    text = "删除失败！";
    //}
    //base.RegisterLoadEvent(string.Concat(new object[]
    //{
    //    "function() {alert('系统提示：\\n\\n",
    //    text,
    //    "');location='FileInfoList.aspx?id=",
    //    this.tvFile.SelectedValue,
    //    //"&did=",
    //    //this.ddlScope.SelectedValue,
    //    "&search=",
    //    this.ViewState["search"],
    //    "'}"
    //}));
    //}
    //public void DelFile(System.Collections.Generic.List<string> listId)
    //{
    //    foreach (string current in listId)
    //    {
    //        if (!string.IsNullOrEmpty(current))
    //        {
    //            FileModel model = FileService.GetModel(current);
    //            if (model.FileType == "0")
    //            {
    //                string path = base.Server.MapPath("~/UploadFiles/FileInfo/" + model.FileNewName);
    //                if (System.IO.File.Exists(path))
    //                {
    //                    System.IO.File.Delete(path);
    //                }
    //            }
    //        }
    //    }
    //}
    //private void DownLoad(string path)
    //{
    //    path = base.Server.MapPath(path);
    //    if (path != null && System.IO.File.Exists(path))
    //    {
    //        System.IO.FileInfo fileInfo = new System.IO.FileInfo(path);
    //        base.Response.Clear();
    //        base.Response.AddHeader("Content-Disposition", "attachment;   filename=" + HttpUtility.UrlEncode(fileInfo.Name, System.Text.Encoding.UTF8));
    //        base.Response.AddHeader("Content-Length", fileInfo.Length.ToString());
    //        base.Response.ContentType = "application/octet-stream";
    //        base.Response.WriteFile(fileInfo.FullName);
    //        base.Response.End();
    //    }
    //}
    //protected DataTable GetTreeNode()
    //{
    //    DataTable dataTable = new DataTable();
    //    dataTable.Columns.Add("FileName");
    //    dataTable.Columns.Add("Id");
    //    string b = "/images/tree/FileInfo/folder.gif";
    //    foreach (TreeNode treeNode in this.tvFile.Nodes)
    //    {
    //        if (treeNode.ImageUrl == b)
    //        {
    //            DataRow dataRow = dataTable.NewRow();
    //            dataRow["FileName"] = treeNode.Text;
    //            dataRow["Id"] = treeNode.Value;
    //            dataTable.Rows.Add(dataRow);
    //        }
    //        this.AddChildNodes(treeNode, dataTable);
    //    }
    //    return dataTable;
    //}
    //protected void btnUpLoad_Click(object sender, System.EventArgs e)
    //{
    //    base.RegisterScript("location='FileInfoList.aspx?id=" + this.tvFile.SelectedValue + "'");
    //}
    #endregion
}


