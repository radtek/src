<html>
<head>
    <title>显示：增加、删除、修改的任务</title>
    <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
    <style type="text/css">
    .row_added
    {
        background:#ffff80;
    }
    .row_deleted, .row_deleted .mini-supergrid-cell
    {
        background:#ddd;
        text-decoration:line-through;
    }
    /* 修改的单元格样式 */
    .mini-supergrid .mini-supergrid-cell-dirty
    {
        background:#f6ac2a;
    }
    </style>
</head>
<body>
    <h4>
        1.新增任务：用“黄色”背景显示<br />
        2.修改任务：用红色背景显示<br />
        3.删除任务：如果是“remove”移除，将不会显示在界面上；<br />如果是“标记删除”，则用灰色背景和删除线显示。
    </h4>
    <div>
        <input type="button" value="增加任务" onclick="addTask()"/>
        <input type="button" value="删除任务" onclick="deleteTask()"/>
        <input type="button" value="移除任务" onclick="removeTask()"/>    
    </div>   
    <div>
    
    </div>
    <br />
    <div id="viewCt">
    </div>
</body>
</html>
<script src="../scripts/boot.js" type="text/javascript"></script>
<script type="text/javascript">

/* 创建项目甘特图对象
-----------------------------------------------------------------------------*/

var project = new PlusProject();
project.setStyle("width:800px;height:400px");
project.setColumns([
    new PlusProject.IDColumn(),
    new PlusProject.StatusColumn(),
    new PlusProject.NameColumn(),
    new PlusProject.PredecessorLinkColumn(),
    new PlusProject.PercentCompleteColumn(),
    new PlusProject.DurationColumn(),
    new PlusProject.StartColumn(),
    new PlusProject.FinishColumn(),
    new PlusProject.WorkColumn(),
    new PlusProject.DepartmentColumn(),
    new PlusProject.PrincipalColumn(),
    new PlusProject.AssignmentsColumn()
]);
project.render(document.getElementById("viewCt"));


var params = mini.getParams();  //...?id=100        获取URL的项目id信息
var projectUID = params.id;
if (projectUID == null) {   //如果没有传递项目id，则加载JSON格式项目数据演示和操作
    LoadJSONProject("data/project.txt", project);
} else {
    LoadProject(projectUID, project);
}


/* 业务代码
-----------------------------------------------------------------------------*/

project.on("drawcell", function (e) {
    var task = e.record, column = e.column, field = e.field;

    //新增
    if (task._state == "added") {
        e.rowCls = "row_added";
    }
    //删除
    if (task.Deleted == true) {
        e.rowCls = "row_deleted";
    }
    
});


function addTask() {
    var newTask = project.newTask();
    newTask.Name = '<新增任务>';    //初始化任务属性

    var selectedTask = project.getSelected();
    if (selectedTask) {
        project.addTask(newTask, "before", selectedTask);   //插入到到选中任务之前
        //project.addTask(newTask, "add", selectedTask);       //加入到选中任务之内            
    } else {
        project.addTask(newTask);
    }
}
function deleteTask() {
    var task = project.getSelected();
    if (task) {
        if (confirm("确定删除任务 \"" + task.Name + "\" ？")) {
            project.updateTask(task, "Deleted", true);
        }
    } else {
        alert("请选中任务");
    }
}
function removeTask() {
    var task = project.getSelected();
    if (task) {
        if (confirm("确定删除任务 \"" + task.Name + "\" ？")) {
            project.removeTask(task);
        }
    } else {
        alert("请选中任务");
    }
}




</script>