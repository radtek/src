<html>
<head>
    <title>自定义列(String/Number/Date/Boolean/Array类型演示)</title>
    <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
</head>
<body style="font-size:14px;">
    
    <div>
        演示如何将<b>"String/Number/Date/Boolean/Array"</b>等类型用表格列显示和操作。<br />        
    </div>   
    <div>                        
    
    </div>
    <br />
    <div id="viewCt">
    </div>


</body>
</html>
<script src="../scripts/boot.js" type="text/javascript"></script>
<script type="text/javascript">

/* 创建项目甘特图对象
-----------------------------------------------------------------------------*/

var project = new PlusProject();
project.setStyle("width:800px;height:400px");

var columns = [];

//可以使用标准列: "状态列", 也可以使用其他的
columns.push(new PlusProject.IDColumn());
columns.push(new PlusProject.StatusColumn());


//以下进行自定义列, 演示各种数据类型对应使用什么列

//String => TextBoxColumn
var stringColumn = {
    name: "name",
    header: "任务名称<br/>String",
    field: "Name",
    width: 150,
    editor: {
        type: "textbox"
    }
};
columns.push(stringColumn);

//Number => NumericUpDownColumn
var numberColumn = {
    header: "进度<br/>Number",
    field: "PercentComplete",
    width: 60,
    editor: {
        type: "numberbox", minValue: 0, maxValue: 100
    }
};
columns.push(numberColumn);

//Date => DatePickerColumn
var dateColumn = {
    header: "开始日期<br/>Date",
    field: "Start",
    width: 100,
    renderer: function (e) {
        var date = e.value;
        if (!date) return "";
        return date.getFullYear() + "-" + (date.getMonth() + 1) + "-" + date.getDate();
    },
    editor: {
        type: "datebox"
    }
};
columns.push(dateColumn);

//Boolean => CheckBoxColumn
var boolColumn = {    
    header: "关键任务<br/>Boolean",
    field: "Critical",
    width: 70,
    type: "checkboxcolumn",
    trueValue: 1,
    falseValue: 0
};
columns.push(boolColumn);

//Array => ComboBoxColumn
var TaskStatus = [
    { id: 1, name: '未启动' },
    { id: 2, name: '进行中' },
    { id: 3, name: '暂停中' },
    { id: 4, name: '已完成' }
];
var arrayColumn = {
    header: "任务状态<br/>Array",
    field: "TaskStatus",
    width: 120,
    editor: {
        type: "combobox", valueField: "id", displayField: "name",
        data: TaskStatus
    },
    renderer: function (e) {
        var value = e.value;
        for (var i = 0, l = TaskStatus.length; i < l; i++) {
            var o = TaskStatus[i];
            if (o.id == value) return o.name;
        }
        return "";
    }
};
columns.push(arrayColumn);

//Multi => ComboBoxColumn
var Principals = [
    { id: 1, name: '张三' },
    { id: 2, name: '李四' },
    { id: 3, name: '赵五' },
    { id: 4, name: '钱六' }
];
var multiColumn = {
    header: "负责人<br/>Multi",
    field: "Principal",
    width: 120,
    editor: {
        type: "combobox", valueField: "id", displayField: "name",
        multiSelect: true, showCheckIcon: true,
        data: Principals
    },
    renderer: function (e) {
        var values = e.value ? e.value.split(",") : [];
        var sb = [];
        for (var i = 0, l = Principals.length; i < l; i++) {
            var o = Principals[i];
            for (var j = 0, k = values.length; j < k; j++) {
                if (o.id == values[j]) {
                    sb.push(o.name);
                }
            }
                
        }
        return sb.join(",");
    }
};
columns.push(multiColumn);


project.setColumns(columns);

project.setTreeColumn("name");
project.render(document.getElementById("viewCt"));



var params = mini.getParams();  //...?id=100        获取URL的项目id信息
var projectUID = params.id;
if (projectUID == null) {   //如果没有传递项目id，则加载JSON格式项目数据演示和操作
    LoadJSONProject("data/project.txt", project);
} else {
    LoadProject(projectUID, project);
}


</script>